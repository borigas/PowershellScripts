# Located in %USERPROFILE%\.gitconfig
# Can be located elsewhere by using a symlink
# cmd /c mklink %USERPROFILE%\.gitconfig (absolutePath)\.gitconfig

[user]
	name = Ben Origas
	email = borigas@ocuvera.com
[alias]
    incoming = !git fetch && git lg ..origin
    outgoing = !git lg origin..
    out = !git outgoing
    pub = !git rev-parse --abbrev-ref HEAD | xargs -r git push --set-upstream origin 
    co = checkout
    l1 = !git lg -1
    d = !git diff && git submodule foreach --recursive git diff
    d0 = diff HEAD
    d1 = diff HEAD^
    dc = diff --cached
    
    # http://haacked.com/archive/2014/07/28/github-flow-aliases/
    up = !git pull --rebase --prune
    c = !git commit -m
    ca = !git add -A && git commit -m
    save = !git add -A && git commit -m 'SAVEPOINT'
    undo = reset HEAD~1 --mixed
    wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
    branchclean = "!f() { git branch --merged ${1-master} | grep -v master | grep -v main | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
    remoteclean = "!f() { git branch -r --merged ${1-master} | grep -v " ${1-master}$" | sed 's/origin\\///' | xargs git push --delete origin; }; f"
    unmerged = "!f() { git branch -r --no-merged ${1-master} | grep origin/release; }; f"
    bdone = "!f() { git checkout ${1-master} && git up && git branchclean ${1-master}; }; f"
    bclean = clean -fXd -e !.*
    fresh = clean -fXd
    rma = "!git rm $(git ls-files --deleted)"
    addnew = "!git add $(git ls-files -o --exclude-standard)"
    saveup = "!f() { git fetch && git save && git rebase ${1-origin/master} && git reset HEAD^; }; f"
    
    
    rm-deleted = "!git rm $(git ls-files --deleted)"
    
    # https://hackernoon.com/lesser-known-git-commands-151a1918a60#.eew71l3ps
    please = push --force-with-lease
    commend = commit --amend --no-edit
    shorty = !git status --short --branch && git submodule foreach --recursive git status --short --branch
    
    # http://stackoverflow.com/a/9074343/1130636
    lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
    
    # http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
    # Search for files in repo
    f = "!git ls-files | grep"
    g = "!git ls-files | grep -i"
    # Log of changes to a file
    filelog = log -u
    
    # Assume
    # http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
    
[color "status"]
  added = green
  changed = yellow bold
  untracked = white magenta bold
  branch = yellow bold

[color "diff"]
  old = cyan

[core]
	editor = code --wait -n
  
# [merge]
#     tool = vscode
# [mergetool "vscode"]
#     cmd = code --wait $MERGED
# [diff]
#     tool = vscode
# [difftool "vscode"]
#     cmd = code --wait --diff $LOCAL $REMOTE

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[maintenance]
	repo = C:/workspaces/OV1
	repo = C:/workspaces/OV2
	repo = C:/workspaces/OV3
	repo = C:/workspaces/OV4
	repo = C:/workspaces/RoomClientImaging/RcImages
